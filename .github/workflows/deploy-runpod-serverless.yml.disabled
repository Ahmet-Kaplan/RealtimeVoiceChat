name: Deploy RunPod Serverless Endpoints

on:
  push:
    paths:
      - '.github/workflows/deploy-runpod-serverless.yml'
      - 'scripts/deploy_runpod.py'
    branches: [main]
  workflow_run:
    workflows: ["Build and Push Whisper Worker", "Build and Push TTS Worker", "Build and Push LLM Worker"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      whisper_image:
        description: 'Whisper Docker image to deploy'
        required: false
        type: string
      tts_image:
        description: 'TTS Docker image to deploy'
        required: false
        type: string
      llm_image:
        description: 'LLM Docker image to deploy'
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install RunPod CLI and dependencies
        run: |
          pip install runpod requests

      - name: Deploy Endpoints to RunPod
        run: |
          # Get the Docker image names from the workflow inputs or build workflows!
          WHISPER_IMAGE="${{ github.event.inputs.whisper_image || format('{0}/realtime-voice-whisper:latest', secrets.DOCKERHUB_USERNAME) }}"
          TTS_IMAGE="${{ github.event.inputs.tts_image || format('{0}/realtime-voice-tts:latest', secrets.DOCKERHUB_USERNAME) }}"
          LLM_IMAGE="${{ github.event.inputs.llm_image || format('{0}/realtime-voice-llm:latest', secrets.DOCKERHUB_USERNAME) }}"
          
          # Run the deployment script
          python3 scripts/deploy_runpod.py > endpoint_response.json
          
          # Extract endpoint IDs
          WHISPER_ENDPOINT_ID=$(jq -r '.whisper.id // ""' endpoint_response.json)
          TTS_ENDPOINT_ID=$(jq -r '.tts.id // ""' endpoint_response.json)
          LLM_ENDPOINT_ID=$(jq -r '.llm.id // ""' endpoint_response.json)
          
          # Check for errors
          if [ -z "$WHISPER_ENDPOINT_ID" ] || [ -z "$TTS_ENDPOINT_ID" ] || [ -z "$LLM_ENDPOINT_ID" ]; then
            echo "Error: One or more endpoints failed to deploy"
            cat endpoint_response.json
            exit 1
          fi
          
          echo "Whisper endpoint deployed: $WHISPER_ENDPOINT_ID"
          echo "TTS endpoint deployed: $TTS_ENDPOINT_ID"
          echo "LLM endpoint deployed: $LLM_ENDPOINT_ID"
          
          # Save endpoint IDs to GitHub environment
          echo "WHISPER_ENDPOINT_ID=$WHISPER_ENDPOINT_ID" >> $GITHUB_ENV
          echo "TTS_ENDPOINT_ID=$TTS_ENDPOINT_ID" >> $GITHUB_ENV
          echo "LLM_ENDPOINT_ID=$LLM_ENDPOINT_ID" >> $GITHUB_ENV
        env:
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
          WHISPER_IMAGE: ${{ github.event.inputs.whisper_image || format('{0}/realtime-voice-whisper:latest', secrets.DOCKERHUB_USERNAME) }}
          TTS_IMAGE: ${{ github.event.inputs.tts_image || format('{0}/realtime-voice-tts:latest', secrets.DOCKERHUB_USERNAME) }}
          LLM_IMAGE: ${{ github.event.inputs.llm_image || format('{0}/realtime-voice-llm:latest', secrets.DOCKERHUB_USERNAME) }}

      - name: Summary
        run: |
          echo "✅ Deployment Summary:"
          echo "All RunPod Serverless endpoints have been deployed successfully."
          echo "Your Next.js application will automatically fetch the latest endpoint IDs at runtime."
          echo ""
          echo "⚠️ Important:"
          echo "1. Make sure to set RUNPOD_API_KEY in your backend environment variables"